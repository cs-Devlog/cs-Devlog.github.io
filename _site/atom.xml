<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-05-11T18:11:45+09:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Devlog</title><author><name>ChanSu Kim</name></author><entry><title type="html">JVM 작동 방식</title><link href="http://localhost:4000/java/2019/05/11/JVM-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D/" rel="alternate" type="text/html" title="JVM 작동 방식" /><published>2019-05-11T18:00:00+09:00</published><updated>2019-05-11T18:00:00+09:00</updated><id>http://localhost:4000/java/2019/05/11/JVM%20%EC%9E%91%EB%8F%99%20%EB%B0%A9%EC%8B%9D</id><content type="html" xml:base="http://localhost:4000/java/2019/05/11/JVM-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D/">&lt;h1 id=&quot;-jvmjava-virtual-machine-&quot;&gt;&amp;lt; JVM(Java Virtual Machine) &amp;gt;&lt;/h1&gt;
&lt;p&gt;JVM 역할은 자바 애플리케이션을 클래스 로더를 통해 읽어 들여 자바 API와 함께 실행하는 것&lt;/p&gt;

&lt;p&gt;또한, Java와 OS 간의 중개자 역할을 수행하여 OS에 구애받지 않고 재사용을 가능하게 한다.&lt;/p&gt;

&lt;p&gt;메모리관리 및 Garbage Collection 역할을 수행하며 Stack 기반의 가상머신이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-java-프로그램-실행-과정-&quot;&gt;&amp;lt; Java 프로그램 실행 과정 &amp;gt;&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/jvm.png&quot; alt=&quot;Imeage&quot; width=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;프로그램이 실행되면 JVM은 OS로부터 이 프로그램이 필요로 하는 메모리를 할당받는다.&lt;/li&gt;
  &lt;li&gt;자바 컴파일러(javac)가 자바 소스코드(.java)를 읽어들여 자바 바이트코드(.class)로 변환시킨다.&lt;/li&gt;
  &lt;li&gt;Class Loader를 통해 class파일들을 JVM으로 로딩한다.&lt;/li&gt;
  &lt;li&gt;로딩된 class파일들은 Execution engine을 통해 해석된다.&lt;/li&gt;
  &lt;li&gt;해석된 바이트코드는 Runtime Data Areas 에 배치되어 실질적인 수행이 이루어지게 된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;class-loader클래스-로더&quot;&gt;Class Loader(클래스 로더)&lt;/h2&gt;
&lt;p&gt;클래스 로더는 .class 파일을 읽어 바이트 코드를 메소드 영역(Method Area)에 저장한다.&lt;/p&gt;

&lt;p&gt;Runtime 시에 클래스를 처음으로 참조할 때, 해당 클래스를 로드하고 링크하는 역할을 수행한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-runtime-data-area-&quot;&gt;&amp;lt; Runtime Data Area &amp;gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/jvm_memory.png&quot; alt=&quot;Imeage&quot; width=&quot;600&quot; /&gt;
프로그램 수행을 위해 os로부터 할당받는 메모리 영역으로 5가지로 볼 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;method-area&quot;&gt;Method area&lt;/h2&gt;
&lt;p&gt;클래스 정보를 처음 메모리 공간에 올릴 때 초기화되는 대상을 저장하기 위한 메모리공간이다.&lt;/p&gt;

&lt;p&gt;클래스 이름, 부모 클래스 이름, 메소드, 변수 정보 등과 같은 수준의 모든 클래스 정보와 static 변수들을 저장한다.&lt;/p&gt;

&lt;h2 id=&quot;heap-area&quot;&gt;Heap area&lt;/h2&gt;
&lt;p&gt;모든 객체를 저장하는 가상 메모리 공간이다. new 연산자로 생성된 객체와 배열을 저장한다.&lt;/p&gt;

&lt;h2 id=&quot;stack-area&quot;&gt;Stack area&lt;/h2&gt;
&lt;p&gt;프로그램 실행과정에서 임시로 할당되었다가 메소드를 빠져나가면 바로 소멸되는 특성의 데이터를 저장하기 위한 영역이다.&lt;/p&gt;

&lt;p&gt;각종 형태의 변수나 임시 데이터, 스레드, 메소드 정보를 저장한다.&lt;/p&gt;

&lt;h2 id=&quot;pc-registers&quot;&gt;PC Registers&lt;/h2&gt;
&lt;p&gt;Thread가 어떤 부분을 명령으로 실행해야할 지에 대한 기록을 하는 부분으로 현재 수행중인 JVM 명령의 주소를 가진다.&lt;/p&gt;

&lt;h2 id=&quot;native-method-stacks&quot;&gt;Native Method Stacks&lt;/h2&gt;
&lt;p&gt;자바 프로그램이 컴파일되어 생성되는 실제 실행할 수 있는 기계어로 작성된 프로그램을 실행시키는 영역이다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-execution-engine실행-엔진-&quot;&gt;&amp;lt; Execution Engine(실행 엔진) &amp;gt;&lt;/h1&gt;
&lt;p&gt;바이트 코드로 된 .class 파일을 실행한다. 바이트 코드를 한줄씩 읽고 다양한 메모리 영역에 나타난 데이터와 정보를 사용한다.&lt;/p&gt;

&lt;h2 id=&quot;interpreter&quot;&gt;Interpreter&lt;/h2&gt;
&lt;p&gt;실행 엔진은 바이트코드를 한줄씩 읽어서 실행한다. 단점은 여러번 하나의 메소드를 호출할 경우 매번 해석을 요청해야하기 때문에 비효율적이다.&lt;/p&gt;

&lt;h2 id=&quot;jitjust-in-time&quot;&gt;JIT(Just-In-Time)&lt;/h2&gt;
&lt;p&gt;인터프리터 방식의 단점을 보완하기 위해 도입된 JIT 컴파일러이다.&lt;/p&gt;

&lt;p&gt;전체 바이트 코드를 컴파일하고 네이티브 코드로 변경하여 더이상 인터프리팅 하지 않고 네이티브 코드로 직접 실행하는 방식이다.&lt;/p&gt;

&lt;p&gt;JIT 컴파일러를 사용하는 JVM은 내부적으로 해당 메서드가 자주 수행되는지 체크하고, 일정 정도를 넘을 때 네이티브 코드로 변경한다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-garbage-collector-&quot;&gt;&amp;lt; Garbage Collector &amp;gt;&lt;/h1&gt;
&lt;p&gt;메모리 관리를 위한 방법 중의 하나로, Heap 영역 안의 Garbage를 찾아내서 Heap의 메모리를 회수한다.&lt;/p&gt;

&lt;p&gt;참조되고 있지 않은 객체를 Garbage라고 하며, Garbage를 판별하기 위해 Reachability 개념을 사용한다.&lt;/p&gt;

&lt;p&gt;한 객체가 다른 객체를 참조하며 다른 객체는 또다른 객체를 참조할 경우에는 유효한 최초의 참조가 무엇인지 파악해야 되는데, 이를 객체 참조의 root set이라고 한다.&lt;/p&gt;

&lt;p&gt;1.힙 내의 다른 객체에 의한 참조&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Java 스택, 즉 Java 메서드 실행 시에 사용하는 지역 변수와 파라미터들에 의한 참조&lt;/li&gt;
  &lt;li&gt;네이티브 스택, 즉 JNI(Java Native Interface)에 의해 생성된 객체에 대한 참조&lt;/li&gt;
  &lt;li&gt;메서드 영역의 정적 변수에 의한 참조
2, 3, 4번의 참조의 경우 root set이 되어 reachability를 판가름하는 기준이 된다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;즉 root set으로부터 시작한 객체들은 reachable이며, root set과 무관한 객체들이 unreachable 객체로 GC의 대상이 된다.&lt;/p&gt;

&lt;h3 id=&quot;메모리-누수-현상&quot;&gt;메모리 누수 현상&lt;/h3&gt;

&lt;p&gt;컴퓨터 프로그램이 필요하지 않은 메모리를 계속 점유하고 있는 현상이다.&lt;/p&gt;

&lt;p&gt;메모리 동적 할당시 Heap 영역에 할당되는데, 사용자가 해제하지 않는 경우 Heap 영역 메모리 공간을 계속 차지하게 된다.&lt;/p&gt;

&lt;p&gt;이는 메모리 부족으로 시스템이 다운될 수도 있는 위험이 있다.&lt;/p&gt;

&lt;p&gt;Java에서 Garbage Collector가 없다면 메모리 누수의 위험이 높다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;-참조-&quot;&gt;&amp;lt; 참조 &amp;gt;&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;http://asfirstalways.tistory.com/158&quot;&gt;http://asfirstalways.tistory.com/158&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mygumi.tistory.com/115?category=648758&quot;&gt;http://mygumi.tistory.com/115?category=648758&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/DaeHeeKim93/DaeHeeKim-Review/tree/master/Java/GC&quot;&gt;https://github.com/DaeHeeKim93/DaeHeeKim-Review/tree/master/Java/GC&lt;/a&gt;&lt;/p&gt;</content><author><name>ChanSu Kim</name></author><category term="JAVA" /><category term="JVM" /><category term="GC" /><category term="Garbage Collector" /><category term="Heap" /><category term="Stack" /><summary type="html">&amp;lt; JVM(Java Virtual Machine) &amp;gt; JVM 역할은 자바 애플리케이션을 클래스 로더를 통해 읽어 들여 자바 API와 함께 실행하는 것 또한, Java와 OS 간의 중개자 역할을 수행하여 OS에 구애받지 않고 재사용을 가능하게 한다. 메모리관리 및 Garbage Collection 역할을 수행하며 Stack 기반의 가상머신이다. &amp;lt; Java 프로그램 실행 과정 &amp;gt; 프로그램이 실행되면 JVM은 OS로부터 이 프로그램이 필요로 하는 메모리를 할당받는다. 자바 컴파일러(javac)가 자바 소스코드(.java)를 읽어들여 자바 바이트코드(.class)로 변환시킨다. Class Loader를 통해 class파일들을 JVM으로 로딩한다. 로딩된 class파일들은 Execution engine을 통해 해석된다. 해석된 바이트코드는 Runtime Data Areas 에 배치되어 실질적인 수행이 이루어지게 된다. Class Loader(클래스 로더) 클래스 로더는 .class 파일을 읽어 바이트 코드를 메소드 영역(Method Area)에 저장한다. Runtime 시에 클래스를 처음으로 참조할 때, 해당 클래스를 로드하고 링크하는 역할을 수행한다. &amp;lt; Runtime Data Area &amp;gt; 프로그램 수행을 위해 os로부터 할당받는 메모리 영역으로 5가지로 볼 수 있다. Method area 클래스 정보를 처음 메모리 공간에 올릴 때 초기화되는 대상을 저장하기 위한 메모리공간이다. 클래스 이름, 부모 클래스 이름, 메소드, 변수 정보 등과 같은 수준의 모든 클래스 정보와 static 변수들을 저장한다. Heap area 모든 객체를 저장하는 가상 메모리 공간이다. new 연산자로 생성된 객체와 배열을 저장한다. Stack area 프로그램 실행과정에서 임시로 할당되었다가 메소드를 빠져나가면 바로 소멸되는 특성의 데이터를 저장하기 위한 영역이다. 각종 형태의 변수나 임시 데이터, 스레드, 메소드 정보를 저장한다. PC Registers Thread가 어떤 부분을 명령으로 실행해야할 지에 대한 기록을 하는 부분으로 현재 수행중인 JVM 명령의 주소를 가진다. Native Method Stacks 자바 프로그램이 컴파일되어 생성되는 실제 실행할 수 있는 기계어로 작성된 프로그램을 실행시키는 영역이다. &amp;lt; Execution Engine(실행 엔진) &amp;gt; 바이트 코드로 된 .class 파일을 실행한다. 바이트 코드를 한줄씩 읽고 다양한 메모리 영역에 나타난 데이터와 정보를 사용한다. Interpreter 실행 엔진은 바이트코드를 한줄씩 읽어서 실행한다. 단점은 여러번 하나의 메소드를 호출할 경우 매번 해석을 요청해야하기 때문에 비효율적이다. JIT(Just-In-Time) 인터프리터 방식의 단점을 보완하기 위해 도입된 JIT 컴파일러이다. 전체 바이트 코드를 컴파일하고 네이티브 코드로 변경하여 더이상 인터프리팅 하지 않고 네이티브 코드로 직접 실행하는 방식이다. JIT 컴파일러를 사용하는 JVM은 내부적으로 해당 메서드가 자주 수행되는지 체크하고, 일정 정도를 넘을 때 네이티브 코드로 변경한다. &amp;lt; Garbage Collector &amp;gt; 메모리 관리를 위한 방법 중의 하나로, Heap 영역 안의 Garbage를 찾아내서 Heap의 메모리를 회수한다. 참조되고 있지 않은 객체를 Garbage라고 하며, Garbage를 판별하기 위해 Reachability 개념을 사용한다. 한 객체가 다른 객체를 참조하며 다른 객체는 또다른 객체를 참조할 경우에는 유효한 최초의 참조가 무엇인지 파악해야 되는데, 이를 객체 참조의 root set이라고 한다. 1.힙 내의 다른 객체에 의한 참조 Java 스택, 즉 Java 메서드 실행 시에 사용하는 지역 변수와 파라미터들에 의한 참조 네이티브 스택, 즉 JNI(Java Native Interface)에 의해 생성된 객체에 대한 참조 메서드 영역의 정적 변수에 의한 참조 2, 3, 4번의 참조의 경우 root set이 되어 reachability를 판가름하는 기준이 된다. 즉 root set으로부터 시작한 객체들은 reachable이며, root set과 무관한 객체들이 unreachable 객체로 GC의 대상이 된다. 메모리 누수 현상 컴퓨터 프로그램이 필요하지 않은 메모리를 계속 점유하고 있는 현상이다. 메모리 동적 할당시 Heap 영역에 할당되는데, 사용자가 해제하지 않는 경우 Heap 영역 메모리 공간을 계속 차지하게 된다. 이는 메모리 부족으로 시스템이 다운될 수도 있는 위험이 있다. Java에서 Garbage Collector가 없다면 메모리 누수의 위험이 높다. &amp;lt; 참조 &amp;gt; http://asfirstalways.tistory.com/158 http://mygumi.tistory.com/115?category=648758 https://github.com/DaeHeeKim93/DaeHeeKim-Review/tree/master/Java/GC</summary></entry><entry><title type="html">백준/1104 리모콘</title><link href="http://localhost:4000/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A3%A8%ED%8A%B8%20%ED%8F%AC%EC%8A%A4/2019/05/11/%EB%B0%B1%EC%A4%80-1104-%EB%A6%AC%EB%AA%A8%EC%BD%98/" rel="alternate" type="text/html" title="백준/1104 리모콘" /><published>2019-05-11T17:36:00+09:00</published><updated>2019-05-11T17:36:00+09:00</updated><id>http://localhost:4000/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A3%A8%ED%8A%B8%20%ED%8F%AC%EC%8A%A4/2019/05/11/%EB%B0%B1%EC%A4%80%201104%20%EB%A6%AC%EB%AA%A8%EC%BD%98</id><content type="html" xml:base="http://localhost:4000/%EB%B0%B1%EC%A4%80/%EB%B8%8C%EB%A3%A8%ED%8A%B8%20%ED%8F%AC%EC%8A%A4/2019/05/11/%EB%B0%B1%EC%A4%80-1104-%EB%A6%AC%EB%AA%A8%EC%BD%98/">&lt;h2 id=&quot;-문제-&quot;&gt;&amp;lt; 문제 &amp;gt;&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1107&quot;&gt;리모콘&lt;/a&gt; 문제는 브루트 포스를 활용하는 문제다.&lt;/p&gt;

&lt;p&gt;모든 경우의 수를 다 해보고 최소값을 찾으면 된다.&lt;/p&gt;

&lt;p&gt;2가지로 나눠서 생각하면 쉽게 접근할 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;초기값 100에서 +, - 만을 활용해 이동할 때 필요한 cnt&lt;/li&gt;
  &lt;li&gt;새로운 값을 입력받아서 해당 값에서부터 +, -로 이동할 때 필요한 cnt&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;특히 2번의 경우에는 새로운 값이 1자리 숫자 ~ 6자리 숫자까지 가능하는 점을 인지해야 한다.&lt;/p&gt;

&lt;h2 id=&quot;-소스-코드-&quot;&gt;&amp;lt; 소스 코드 &amp;gt;&lt;/h2&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.io.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;java.util.*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringTokenizer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sb&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BufferedReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;InputStreamReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;StringTokenizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;br&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;readLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stk&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nextToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;+&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;11&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;parseInt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//초기값 100에서 갈 수 있는 최단경로값 계산&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//0~9까지 모든 경우의 수 탐색&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;//현재 답보다 커지면 가지치기&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;     &lt;span class=&quot;c1&quot;&gt;//6개의 숫자를 골랏을 때&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getRes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//6자리가 아닌 수&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//6자리를 만드는 경우&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getRes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;MAX_VALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>ChanSu Kim</name></author><category term="백준" /><category term="백준 1104" /><category term="백준 리모콘" /><category term="브루트 포스" /><category term="DFS" /><summary type="html">&amp;lt; 문제 &amp;gt; 리모콘 문제는 브루트 포스를 활용하는 문제다. 모든 경우의 수를 다 해보고 최소값을 찾으면 된다. 2가지로 나눠서 생각하면 쉽게 접근할 수 있다. 초기값 100에서 +, - 만을 활용해 이동할 때 필요한 cnt 새로운 값을 입력받아서 해당 값에서부터 +, -로 이동할 때 필요한 cnt 특히 2번의 경우에는 새로운 값이 1자리 숫자 ~ 6자리 숫자까지 가능하는 점을 인지해야 한다. &amp;lt; 소스 코드 &amp;gt; import java.io.*; import java.util.*; public class Main { public static StringTokenizer stk; public static StringBuilder sb = new StringBuilder(); public static boolean[] button = new boolean[12]; public static int ans = Integer.MAX_VALUE; public static int n; public static void main(String[] args) throws Exception { BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); n = Integer.parseInt(br.readLine()); int m = Integer.parseInt(br.readLine()); if (m != 0) stk = new StringTokenizer(br.readLine()); for (int i = 0; i &amp;lt; m; i++) { String s = stk.nextToken(); if (s.equals(&quot;+&quot;)) s = &quot;10&quot;; if (s.equals(&quot;-&quot;)) s = &quot;11&quot;; button[Integer.parseInt(s)] = true; } //초기값 100에서 갈 수 있는 최단경로값 계산 if (!button[10] &amp;amp;&amp;amp; (100 - n) &amp;gt;= 0) ans = Math.min(ans, 100 - n); if (!button[11] &amp;amp;&amp;amp; (n - 100) &amp;gt;= 0) ans = Math.min(ans, n - 100); //0~9까지 모든 경우의 수 탐색 for (int i = 0; i &amp;lt; 10; i++) { if (!button[i]) dfs(i, 1, 1); } System.out.println(ans); } public static int dfs(int num, int len, int cnt) { if (len &amp;gt; ans) return Integer.MAX_VALUE; //현재 답보다 커지면 가지치기 if (cnt == 6) { //6개의 숫자를 골랏을 때 return ans = Math.min(ans, getRes(num, len)); } for (int i = 0; i &amp;lt; 10; i++) { if (i == 0) { //6자리가 아닌 수 dfs(num, len, cnt + 1); } if (!button[i]) { //6자리를 만드는 경우 dfs(num * 10 + i, len + 1, cnt + 1); } } return Integer.MAX_VALUE; } public static int getRes(int num, int cnt) { if (n == num) return cnt; if (!button[10] &amp;amp;&amp;amp; n &amp;gt; num) return cnt + n - num; if (!button[11] &amp;amp;&amp;amp; n &amp;lt; num) return cnt + num - n; return Integer.MAX_VALUE; } }</summary></entry><entry><title type="html">11번가 SKCT 및 코딩테스트 후기</title><link href="http://localhost:4000/%EC%9D%B8%EC%A0%81%EC%84%B1/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/2019/05/11/11%EB%B2%88%EA%B0%80-SKCT-%EB%B0%8F-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%9B%84%EA%B8%B0/" rel="alternate" type="text/html" title="11번가 SKCT 및 코딩테스트 후기" /><published>2019-05-11T00:00:08+09:00</published><updated>2019-05-11T00:00:08+09:00</updated><id>http://localhost:4000/%EC%9D%B8%EC%A0%81%EC%84%B1/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/2019/05/11/11%EB%B2%88%EA%B0%80%20SKCT%20%EB%B0%8F%20%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8%20%ED%9B%84%EA%B8%B0</id><content type="html" xml:base="http://localhost:4000/%EC%9D%B8%EC%A0%81%EC%84%B1/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/2019/05/11/11%EB%B2%88%EA%B0%80-SKCT-%EB%B0%8F-%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8-%ED%9B%84%EA%B8%B0/">&lt;h2 id=&quot;-11번가-인턴-skct-및-코딩테스트-후기-&quot;&gt;&amp;lt; 11번가 인턴 SKCT 및 코딩테스트 후기 &amp;gt;&lt;/h2&gt;
&lt;p&gt;다른 서류는 잘안붙는데 체험형 인턴이라 그런가 붙었다.&lt;/p&gt;

&lt;p&gt;제출란에 포트폴리오가 선택이였는데 몇개 추가해서 제출한 덕인거같은 느낌..?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/11st.png&quot; alt=&quot;11st&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;-skct-후기-&quot;&gt;&amp;lt; SKCT 후기 &amp;gt;&lt;/h2&gt;
&lt;p&gt;처음 보는 SKCT였다.&lt;/p&gt;

&lt;p&gt;듣기로는 2019 상반기 공채랑 문제가 똑같다고 하던데 본인은 처음이라 잘 모르겠다.&lt;/p&gt;

&lt;p&gt;총 인원 : 71명&lt;/p&gt;

&lt;p&gt;응시 : 40명&lt;/p&gt;

&lt;p&gt;불참 : 31명&lt;/p&gt;

&lt;p&gt;개발 직군만 불참이 거의 절반가까이 된다.&lt;/p&gt;

&lt;p&gt;아마도 체험형이고, 다른 기업 시험이 있기 때문에 겹쳐서 대부분 포기한 것이라 생각한다.&lt;/p&gt;

&lt;p&gt;교재는 위포트를 사용했는데, 실제 시험장에서는 위포트보다 쉬웠다.&lt;/p&gt;

&lt;h3 id=&quot;실행-역량&quot;&gt;실행 역량&lt;/h3&gt;

&lt;p&gt;유튜브 보면서 공부(히로와 면접술사)했다.&lt;/p&gt;

&lt;p&gt;SKCT 실행역량에서 중요한 점은&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;역할에 맞게 행동한다.&lt;/li&gt;
  &lt;li&gt;주도적으로 당사자와 되도록 해결한다.&lt;/li&gt;
  &lt;li&gt;업무상 문제라면 보고해서 조치를 받는다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위 방식대로 풀면 어느정도 감이 잡힌다.&lt;/p&gt;

&lt;p&gt;실행역량은 겨우 다풀었는데 뒤에 인적성은 10문제 넘게 못푼것 같다.&lt;/p&gt;

&lt;p&gt;결과가 나와봐야 알 것 같다.&lt;/p&gt;

&lt;h2 id=&quot;-코딩-테스트-&quot;&gt;&amp;lt; 코딩 테스트 &amp;gt;&lt;/h2&gt;
&lt;p&gt;진행 방식 : 3문제 / 2시간&lt;/p&gt;

&lt;p&gt;코딩테스트 보는 기업중 복붙을 못하게하는 기업이 있는데, 정말 이해할수가 없다.&lt;/p&gt;

&lt;p&gt;자바같은경우 오버라이드하면 다적어야하는데..&lt;/p&gt;

&lt;p&gt;어느 줄에서 오류가 발생한지 알아내는 디버깅마저 힘들었다.&lt;/p&gt;

&lt;p&gt;1번 문제는 단순 구현문제였는데 별로 어렵지 않았다.&lt;/p&gt;

&lt;p&gt;2번 문제는 &lt;a href=&quot;https://www.acmicpc.net/problem/2504&quot;&gt;괄호의 값&lt;/a&gt; 문제와 유사하다.&lt;/p&gt;

&lt;p&gt;입력으로 압축된 문자를 주어주고 이를 풀어내는 문제였다. ex) 4(3(h)g) =&amp;gt; hhghhghhghhg&lt;/p&gt;

&lt;p&gt;여기서 계속 인덱스오류가 나서 못찾고 결국 제출했다.&lt;/p&gt;

&lt;p&gt;다시 생각해보니 Stack으로 풀면되는 문제였는데.. 아쉬움이 남는다.&lt;/p&gt;

&lt;p&gt;3번 문제도 네트워크 연결 문제와 상당히 비슷했다.&lt;/p&gt;

&lt;p&gt;시험 당시에는 Union-Find가 아닌 Dijkstra로 풀었는데, 어디서 꼬였는지 절반만 맞고, 시간초과가 난 상태로 제출했다.&lt;/p&gt;

&lt;p&gt;한마디로 절반만 맞은셈이니까 틀린문제다.&lt;/p&gt;

&lt;p&gt;여러 유형을 더 접해봐야 할것 같다.&lt;/p&gt;

&lt;p&gt;2번문제를 Stack으로 해결한다고 좀더 빨리 생각해야했는데 하는 아쉬움이 남는다.&lt;/p&gt;

&lt;h2 id=&quot;-결과-&quot;&gt;&amp;lt; 결과 &amp;gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/11st_result.png&quot; alt=&quot;11st_result&quot; width=&quot;500&quot; /&gt;&lt;/p&gt;</content><author><name>ChanSu Kim</name></author><category term="11번가" /><category term="코딩테스트" /><category term="인적성" /><summary type="html">&amp;lt; 11번가 인턴 SKCT 및 코딩테스트 후기 &amp;gt; 다른 서류는 잘안붙는데 체험형 인턴이라 그런가 붙었다. 제출란에 포트폴리오가 선택이였는데 몇개 추가해서 제출한 덕인거같은 느낌..? &amp;lt; SKCT 후기 &amp;gt; 처음 보는 SKCT였다. 듣기로는 2019 상반기 공채랑 문제가 똑같다고 하던데 본인은 처음이라 잘 모르겠다. 총 인원 : 71명 응시 : 40명 불참 : 31명 개발 직군만 불참이 거의 절반가까이 된다. 아마도 체험형이고, 다른 기업 시험이 있기 때문에 겹쳐서 대부분 포기한 것이라 생각한다. 교재는 위포트를 사용했는데, 실제 시험장에서는 위포트보다 쉬웠다. 실행 역량 유튜브 보면서 공부(히로와 면접술사)했다. SKCT 실행역량에서 중요한 점은 역할에 맞게 행동한다. 주도적으로 당사자와 되도록 해결한다. 업무상 문제라면 보고해서 조치를 받는다. 위 방식대로 풀면 어느정도 감이 잡힌다. 실행역량은 겨우 다풀었는데 뒤에 인적성은 10문제 넘게 못푼것 같다. 결과가 나와봐야 알 것 같다. &amp;lt; 코딩 테스트 &amp;gt; 진행 방식 : 3문제 / 2시간 코딩테스트 보는 기업중 복붙을 못하게하는 기업이 있는데, 정말 이해할수가 없다. 자바같은경우 오버라이드하면 다적어야하는데.. 어느 줄에서 오류가 발생한지 알아내는 디버깅마저 힘들었다. 1번 문제는 단순 구현문제였는데 별로 어렵지 않았다. 2번 문제는 괄호의 값 문제와 유사하다. 입력으로 압축된 문자를 주어주고 이를 풀어내는 문제였다. ex) 4(3(h)g) =&amp;gt; hhghhghhghhg 여기서 계속 인덱스오류가 나서 못찾고 결국 제출했다. 다시 생각해보니 Stack으로 풀면되는 문제였는데.. 아쉬움이 남는다. 3번 문제도 네트워크 연결 문제와 상당히 비슷했다. 시험 당시에는 Union-Find가 아닌 Dijkstra로 풀었는데, 어디서 꼬였는지 절반만 맞고, 시간초과가 난 상태로 제출했다. 한마디로 절반만 맞은셈이니까 틀린문제다. 여러 유형을 더 접해봐야 할것 같다. 2번문제를 Stack으로 해결한다고 좀더 빨리 생각해야했는데 하는 아쉬움이 남는다. &amp;lt; 결과 &amp;gt;</summary></entry><entry><title type="html">Highlight Test</title><link href="http://localhost:4000/test/guide/2013/12/25/highlight-test/" rel="alternate" type="text/html" title="Highlight Test" /><published>2013-12-25T08:29:08+09:00</published><updated>2013-12-25T08:29:08+09:00</updated><id>http://localhost:4000/test/guide/2013/12/25/highlight-test</id><content type="html" xml:base="http://localhost:4000/test/guide/2013/12/25/highlight-test/">&lt;p&gt;This is a highlight test.&lt;/p&gt;

&lt;h1 id=&quot;normal-block&quot;&gt;Normal block&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;alert('Hello World!');
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print 'helloworld'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;highlight-block&quot;&gt;Highlight block&lt;/h1&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello, world!'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'helloworld'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;iostream&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;cout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Hello World&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;endl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Image Test
&lt;img src=&quot;/assets/images/searchicon.png&quot; alt=&quot;Image&quot; width=&quot;auto&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Local
bundle exec jekyll server&lt;/p&gt;</content><author><name>ChanSu Kim</name></author><category term="Test" /><category term="Guide" /><summary type="html">This is a highlight test. Normal block alert('Hello World!'); print 'helloworld' Highlight block alert( 'Hello, world!' ); print 'helloworld' def foo puts 'foo' end def foo puts 'foo' end 1 2 3 def foo puts 'foo' end #include &amp;lt;iostream&amp;gt; using namespace std; void foo(int arg1, int arg2) { } int main() { string str; foo(1, 2); cout &amp;lt;&amp;lt; &quot;Hello World&quot; &amp;lt;&amp;lt; endl; return 0; } Image Test Local bundle exec jekyll server</summary></entry></feed>